/**
 * File for converting Philly neighborhoods.
 * 
 * EPSG: 2272 => EPSG: 4326
 */

/**
 * Simple string function to do word case.
 */
String.prototype.toCapitalize = function() {
  return this.replace( /(^|\s)([a-z])/g , function(m,p1,p2) { return p1+p2.toUpperCase(); } );
};

// Required modules
var Geom = require('geoscript/Geom');
var Proj = require('geoscript/proj');
var Projection = Proj.Projection;
var Feature = require('geoscript/feature');
var Layer = require('geoscript/layer');
var count = 0;

// Info on layer and workspace.  This is the directory where the
// shapefile data is, then the layer name, which is the basically
// the file name without extension.
var neighborhoodsInfo = {
  workspace: './data/philly-neighborhoods/Planning_Neighborhoods/',
  name: 'Planning_Neighborhoods'
};
try {
  var neighborhoodsShp = new Layer.Layer(neighborhoodsInfo);
}
catch (err) {
  print(err);
}

// Define projections
var proj2272 = new Projection('epsg:2272');
var proj4326 = new Projection('epsg:4326');

// Label row
print('location_id,name,lat,lon,borough,address,city,state');

// Go through each feature, converting the centroid.
neighborhoodsShp.features.forEach(function(feature) {
  count++;
  
  var transformed = Proj.transform(feature.geometry.centroid, proj2272, proj4326);
  var name = feature.get('NAME').toLowerCase().toCapitalize();
  // Sorry ...
  var coordinate = eval('(' + transformed.json + ')');
  coordinate = coordinate.coordinates;
  
  print(count + ',' + name + ',' + coordinate[0] + ',' + coordinate[1] + ',,,,');
});

// End execution
quit();